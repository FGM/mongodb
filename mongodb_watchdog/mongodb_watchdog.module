<?php
// $Id$

/**
 * Fires watchdog messages to mongodb.
 */

/**
 * Implement hook_help().
 */
function mongodb_watchdog_help($path, $arg) {
  switch ($path) {
    case 'admin/help#mongodb_watchdog':
      $output = '<p>' . t('<a href="!project">MongoDB watchdog</a> logs events by inserting messages in a collection in the designated <a href="!mongo">MongoDB</a> store.',
        array(
          '!project' => 'http://drupal.org/project/mongodb_watchdog',
          '!mongo' => 'http://www.mongodb.org/',
        )) . "</p>\n"
        . '<p>' . t('Its settings are integrated with the <a href="!logging">standard logging settings form</a>.',
          array('!logging' => url('admin/config/development/logging'))) . "</p>\n";
      break;

    default:
      $output = NULL;
      break;
  }
  return $output;
}

/**
 * Implement hook_menu().
 */
function mongodb_watchdog_menu() {
  $items['admin/reports/mongodb'] = array(
    'title' => 'Recent log entries in MongoDB',
    'description' => 'View events that have recently been logged in MongoDB.',
    'page callback' => 'mongodb_watchdog_overview',
    'access arguments' => array('access site reports'),
    'file'  => 'mongodb_watchdog.admin.inc',
  );
  return $items;
}
/**
 * Implement hook_form_<form_id>_alter for the system logging form.
 *
 * @param array $form
 * @param array $form_state
 * @return void
 */
function mongodb_watchdog_form_system_logging_settings_alter(&$form, &$form_state) {
  $form['mongodb_watchdog'] = array(
    '#type'  => 'fieldset',
    '#title' => t('MongoDB settings'),
    '#collapsible' => TRUE,
  );
  $form['mongodb_watchdog']['mongodb_watchdog_connection'] = array(
    '#title' => t('MongoDB Connection URL'),
    '#type' => 'textfield',
    '#default_value' => variable_get('mongodb_watchdog_connection', ''),
  );
  $form['mongodb_watchdog']['mongodb_watchdog_dbname'] = array(
    '#title' => t('MongoDB Database name'),
    '#type' => 'textfield',
    '#default_value' => variable_get('mongodb_watchdog_dbname', 'drupal'),
    '#description' => t('In which database should the watchdog be stored'),
  );
  $form['mongodb_watchdog']['mongodb_watchdog_collectionname'] = array(
    '#title' => t('MongoDB Collection name'),
    '#type'  => 'textfield',
    '#default_value' => variable_get('mongodb_watchdog_collectionname', 'watchdog'),
    '#description' => t('In which collection should the watchdog be stored'),
  );
}

/**
 * Implement hook_watchdog().
 */
function mongodb_watchdog_watchdog($log_entry) {
  // TODO Figure out how to use a static but also close the session at the end.
  //static $mongo;

  $mongo = new Mongo(variable_get('mongodb_watchdog_connection', 'localhost'));

  $collection = $mongo
    ->selectDB(variable_get('mongodb_watchdog_dbname', 'drupal'))
    ->selectCollection(variable_get('mongodb_watchdog_collectionname', 'watchdog'));
  $collection->insert((array) $log_entry);

  $mongo->close();
}
