<?php

/**
 * @file
 * MongoDB watchdog install file.
 */

use Drupal\Core\Site\Settings;

/**
 * Implements hook_install().
 */
function mongodb_watchdog_install() {
  /** @var \Drupal\mongodb_watchdog\Logger $logger */
  $logger = \Drupal::service('mongodb.logger');
  $logger->ensureIndexes();
}

/**
 * Implements hook_requirements().
 *
 * - Ensure a logger alias
 * - Ensure the logger alias does not point to the same DB as another alias.
 */
function mongodb_watchdog_requirements($phase) {
  $settings = Settings::get('mongodb');
  $module = 'mongodb_watchdog';

  $ret = [
    $module => [
      'title' => 'MongoDB watchdog',
    ],
  ];

  $logger_alias = 'logger';
  $databases = $settings['databases'];
  if (!isset($databases[$logger_alias])) {
    $ret['mongodb-watchdog'] += [
      'severity' => REQUIREMENT_ERROR,
      'value' => t('Missing `@alias` database alias in settings.', ['@alias' => $logger_alias]),
    ];
    return $ret;
  }

  list($logger_client, $logger_db) = $databases[$logger_alias];
  unset($databases[$logger_alias]);
  $duplicates = [];
  foreach ($databases as $alias => list($client, $db)) {
    if ($logger_client == $client && $logger_db == $db) {
      $duplicates[] = "`$alias`";
    }
  }
  if (!empty($duplicates)) {
    $ret[$module] += [
      'severity' => REQUIREMENT_ERROR,
      'value' => t('The `@alias` alias points to the same database as @others.', [
        '@alias' => $logger_alias,
        '@others' => implode(', ', $duplicates),
      ]),
      'description' => t('Those databases would also be dropped when uninstalling the watchdog module.'),
    ];
    return $ret;
  }

  return $ret;
}

/**
 * Implements hook_uninstall().
 *
 * Drop /all/ the watchdog collections by dropping the logger database.
 */
function mongodb_watchdog_uninstall() {
  /** @var \MongoDB\Tests\Database\ $logger */
  $logger = \Drupal::service('mongodb.watchdog_storage');
  $logger->drop();
}
